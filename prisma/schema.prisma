// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  TodoList      TodoList[]
  SharedLists   SharedLists[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model TodoList {
  id        String   @id @default(cuid())
  title     String?
  colorCode String?  @default("#fbfbfb")
  ownerId   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)


  TodoItem    TodoItem[]
  SharedLists SharedLists[]
}

model TodoItem {
  id         String   @id @default(cuid())
  title      String?
  isDone     Boolean? @default(false)
  todoListId String
  createdAt  DateTime @default(now())
  todoList   TodoList @relation(fields: [todoListId], references: [id], onDelete: Cascade)

}

model SharedLists {
  id           String   @id @default(cuid())
  todoListId   String
  todoList     TodoList @relation(fields: [todoListId], references: [id], onDelete: Cascade)
  sharedUserId String
  user         User     @relation(fields: [sharedUserId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())

}
